package com.stanislav.swing;

import java.awt.FlowLayout;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.StringReader;
import java.net.MalformedURLException;
import java.net.URL;
import java.text.ParseException;
import java.util.Hashtable;

import javax.imageio.ImageIO;
import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import org.apache.batik.anim.dom.SAXSVGDocumentFactory;
import org.apache.batik.swing.JSVGCanvas;
import org.apache.batik.util.XMLResourceDescriptor;
import org.w3c.dom.Document;
import org.w3c.dom.svg.SVGDocument;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import com.stanislav.model.Player;
import com.stanislav.specifications.PlayerEJBRemote;

public class App {
	
	public static void main(String[] args) throws NamingException, ParserConfigurationException, SAXException, IOException {
		JFrame frame = new JFrame();
		frame.setSize(600, 300);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		JSVGCanvas c = new JSVGCanvas();
//		String uri = new File("C:\\Users\\Stanislav\\Desktop\\eclipse\\workspace_hockey\\Hockey-main\\web\\src\\main\\resources\\index.svg").toURI().toString();
//		c.setURI(uri);
		
		final Hashtable<String, String> jndiProperties = new Hashtable<>();
		jndiProperties.put(Context.URL_PKG_PREFIXES, "org.jboss.ejb.client.naming");
		final Context context = new InitialContext(jndiProperties);

		PlayerEJBRemote playerEJB = (PlayerEJBRemote) context
				.lookup("ejb:Hockey-main/Hockey-ejb/PlayerEJB!" + PlayerEJBRemote.class.getName());
		Player player = playerEJB.getPlayerById(1L);
		String text = player.getTeam().getLogoSmallAsString();
		
//		String text = "<?xml version=\"1.0\" encoding=\"UTF-8\"?> "
//				+ "<!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.0//EN' 'http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd'> "
//				+ "<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"fill-opacity:1; color-rendering:auto; color-interpolation:auto; text-rendering:auto; "
//				+ "stroke:black; stroke-linecap:square; stroke-miterlimit:10; shape-rendering:auto; stroke-opacity:1; fill:black; stroke-dasharray:none; "
//				+ "font-weight:normal; stroke-width:1; font-family:&apos;Dialog&apos;; font-style:normal; stroke-linejoin:miter; font-size:12; stroke-dashoffset:0; "
//				+ "image-rendering:auto;\" xmlns=\"http://www.w3.org/2000/svg\""
//				+ "> <!--Generated by the Batik Graphics2D SVG Generator--><defs id=\"genericDefs\" " + "/><g"
//				+ "><g style=\"fill:red; stroke:red;\" "
//				+ "><rect x=\"10\" width=\"100\" height=\"100\" y=\"10\" style=\"stroke:none;\" " + "/></g></g"
//				+ "></svg>";
//
		DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
		dbf.setNamespaceAware(true);
		DocumentBuilder db = dbf.newDocumentBuilder();
		InputSource is = new InputSource();
		is.setCharacterStream(new StringReader(text));
		Document doc = db.parse(is);
		c.setDocument(doc);
		
		frame.getContentPane().add(c);
		frame.setVisible(true);

	}
	
	
	/*public static void main(String[] args) throws NamingException, MalformedURLException, IOException, ParseException, ParserConfigurationException, SAXException {
		final Hashtable<String, String> jndiProperties = new Hashtable<>();
		jndiProperties.put(Context.URL_PKG_PREFIXES, "org.jboss.ejb.client.naming");
		final Context context = new InitialContext(jndiProperties);

		PlayerEJBRemote playerEJB = (PlayerEJBRemote) context
				.lookup("ejb:Hockey-main/Hockey-ejb/PlayerEJB!" + PlayerEJBRemote.class.getName());
		Player player = playerEJB.getPlayerById(1L);
		System.out.println(player.getName());

		JFrame frame = new JFrame();
		frame.setSize(100, 100);
		frame.setVisible(true);
		JPanel panel = new JPanel();
		JLabel label = new JLabel();
		label.setText(player.getName());
		panel.add(label);
		frame.add(panel);
		JLabel label2 = new JLabel();
		label2.setText("Something");
		BufferedImage picture = ImageIO.read(new URL(player.getImageUrl()));
		JLabel labelPic = new JLabel(new ImageIcon(picture));

		FlowLayout layout = new FlowLayout();
		frame.setLayout(layout);
		frame.add(panel);
		frame.add(labelPic);
		frame.pack();
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

		JSVGCanvas c = new JSVGCanvas();
//		String uri = player.getTeam().getLogoSmallAsString();
//		c.setURI(uri);

		String text = "<?xml version=\"1.0\" encoding=\"UTF-8\"?> "
				+ "<!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.0//EN' 'http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd'> "
				+ "<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"fill-opacity:1; color-rendering:auto; color-interpolation:auto; text-rendering:auto; "
				+ "stroke:black; stroke-linecap:square; stroke-miterlimit:10; shape-rendering:auto; stroke-opacity:1; fill:black; stroke-dasharray:none; "
				+ "font-weight:normal; stroke-width:1; font-family:&apos;Dialog&apos;; font-style:normal; stroke-linejoin:miter; font-size:12; stroke-dashoffset:0; "
				+ "image-rendering:auto;\" xmlns=\"http://www.w3.org/2000/svg\""
				+ "> <!--Generated by the Batik Graphics2D SVG Generator--><defs id=\"genericDefs\" " + "/><g"
				+ "><g style=\"fill:red; stroke:red;\" "
				+ "><rect x=\"10\" width=\"100\" height=\"100\" y=\"10\" style=\"stroke:none;\" " + "/></g></g"
				+ "></svg>";

		DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
		dbf.setNamespaceAware(true);
		DocumentBuilder db = dbf.newDocumentBuilder();
		InputSource is = new InputSource();
		is.setCharacterStream(new StringReader(text));
		Document doc = db.parse(is);
		c.setDocument(doc);
		String uri = new File("C:\\Users\\Stanislav\\Desktop\\eclipse\\workspace_hockey\\Hockey-main\\web\\src\\main\\resources\\index.svg").toURI().toString();
		c.setURI(uri);
		frame.add(c);
//		frame.add(new JLabel("Something"));
		
		
		InputStream stream = new ByteArrayInputStream(player.getTeam().getLogoSmall());
		String parser = XMLResourceDescriptor.getXMLParserClassName();
		SAXSVGDocumentFactory f = new SAXSVGDocumentFactory(parser);
		SVGDocument svgdoc = f.createSVGDocument("", stream);
		c.setDocument(svgdoc);
		
	}*/

}
